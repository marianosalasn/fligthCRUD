/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package CudadesPresentacion;

import DAOS.ListaCiudades;
import DAOS.ListaVuelos;
import Logic.Ciudad;
import Logic.Escala;
import Logic.Vuelo;
import VuelosPresentacion.VistaVuelos;
import java.util.ArrayList;
import java.util.List;
import javax.swing.table.AbstractTableModel;

/**
 *
 * @author Mariano Salas Nu√±ez
 * @version 1.0
 */
public class VistaCiudades extends javax.swing.JFrame {

    /**
     * Creates new form vista
     */
    public VistaCiudades(ControlVistaCiudad control) {
        setTitle("Adminitracion de Vuelos by Mariano Salas");
        this.modelg = new TableCityModel(listc.getCiudades());
        this.control=control;
        initComponents();
        this.setDefaultCloseOperation(HIDE_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        idTextSpace = new javax.swing.JTextField();
        nameTextSpace = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<Integer>(control.getHorasC());
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ciudadesScrollPanel = new javax.swing.JScrollPane();
        ciudadesTable = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        nameSearchSpaceTextSpace = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        stateBarTxt = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        idTextSpace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idTextSpaceActionPerformed(evt);
            }
        });
        idTextSpace.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                idTextSpaceKeyReleased(evt);
            }
        });

        nameTextSpace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameTextSpaceActionPerformed(evt);
            }
        });

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel1.setText("ID");

        jLabel2.setText("Nombre");

        jLabel3.setText("GMT");

        ciudadesTable.setModel(this.getTablaCityModel());
        ciudadesScrollPanel.setViewportView(ciudadesTable);

        jLabel4.setText("Nombre");

        nameSearchSpaceTextSpace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameSearchSpaceTextSpaceActionPerformed(evt);
            }
        });

        searchButton.setText("Buscar");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jButton1.setText("Agregar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Actualizar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(jLabel3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(46, 46, 46)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idTextSpace)
                            .addComponent(nameTextSpace, javax.swing.GroupLayout.DEFAULT_SIZE, 94, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stateBarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameSearchSpaceTextSpace, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchButton))
                    .addComponent(ciudadesScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(idTextSpace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4)
                        .addComponent(nameSearchSpaceTextSpace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchButton)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nameTextSpace))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addGap(18, 18, 18)
                        .addComponent(stateBarTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ciudadesScrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(73, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String code= idTextSpace.getText();
        String name= nameTextSpace.getText();
        int gmt= (int)jComboBox1.getSelectedItem();
        if(code.isEmpty()||name.isEmpty()){
            
            stateBarTxt.setText("<html><p style='color: red'>Ingrese correctamente los datos</p></html>");
        }
        else{
            Ciudad c = new Ciudad(code,name,gmt);
            if(ListaCiudades.getInstance().getCiudades().contains(c)){
            stateBarTxt.setText("<html><p style='color: green'>Datos actualizados</p></html>");
            }
            else{
            stateBarTxt.setText("<html><p style='color: green'>Datos agregados</p></html>");
             }
              ListaCiudades.getInstance().addCity(c);
        }
        modelg.changeData(ListaCiudades.getInstance().getCiudades());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
       
       List<Ciudad> lsc = control.busqueda(nameSearchSpaceTextSpace.getText());
       getTablaCityModel().changeData(lsc);
    }//GEN-LAST:event_searchButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jButton1ActionPerformed(evt);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void idTextSpaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idTextSpaceActionPerformed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_idTextSpaceActionPerformed

    private void nameTextSpaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameTextSpaceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameTextSpaceActionPerformed

    private void idTextSpaceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idTextSpaceKeyReleased
        String text = nameSearchSpaceTextSpace.getText();
        if(text != null && !text.isEmpty() && !"".equals(text)){
             modelg.changeData(ListaCiudades.getInstance().getCiudades());
        }
        nameSearchSpaceTextSpace.setText("");
    }//GEN-LAST:event_idTextSpaceKeyReleased

    private void nameSearchSpaceTextSpaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameSearchSpaceTextSpaceActionPerformed
       List<Ciudad> lsc = control.busqueda(nameSearchSpaceTextSpace.getText());
       getTablaCityModel().changeData(lsc);
    }//GEN-LAST:event_nameSearchSpaceTextSpaceActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VistaCiudades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VistaCiudades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VistaCiudades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VistaCiudades.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VistaCiudades(new ControlVistaCiudad()).setVisible(true);
            }
        });
    }
    private static class TableCityModel extends AbstractTableModel {
        List<Ciudad> elementos;

        public TableCityModel(List<Ciudad> ls) {
        
            elementos = ls;
        }

        @Override
        public int getRowCount() {
            return elementos.size();
        }

        @Override
        public int getColumnCount() {
            return 3;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Ciudad city = elementos.get(rowIndex);
            switch(columnIndex){
                case 0: return city.getCode();
                case 1 : return city.getNombre();
                case 2 : return city.getGmt();
               
                default: throw new IndexOutOfBoundsException();
            }
        }
        
        public void changeData(List<Ciudad> citiesList) {
            elementos= citiesList;
            this.fireTableDataChanged();
        }
        
        @Override
        public String getColumnName(int col) {
             switch(col){
                 case 0 : return "Codigo";
                 case 1 : return "Ciudad";
                 case 2 : return "Zona Horaria";
                 
                 default: throw new IndexOutOfBoundsException();
             }
        }
        
    }
    
    
    private ListaVuelos flies = ListaVuelos.getInstance();
    private ListaCiudades cities= ListaCiudades.getInstance();
    private ControlVistaCiudad control ;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane ciudadesScrollPanel;
    private javax.swing.JTable ciudadesTable;
    private javax.swing.JTextField idTextSpace;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<Integer> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField nameSearchSpaceTextSpace;
    private javax.swing.JTextField nameTextSpace;
    private javax.swing.JButton searchButton;
    private javax.swing.JLabel stateBarTxt;
    // End of variables declaration//GEN-END:variables
   
    private TableCityModel modelg;

    public TableCityModel getTablaCityModel() {
        return modelg;
    }

    public void setTablaCityModel(TableCityModel tablaEscalasModel) {
        this.modelg = tablaEscalasModel;
    }
    
    ListaCiudades listc = ListaCiudades.getInstance();

}
